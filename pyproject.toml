[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pyosmeta"
dynamic = ["version"]
description = "Tools that update the pyOpenSci contributor and review metadata that is posted on our website"
authors = [{ name = "Leah Wasser", email = "leah@pyopensci.org" }]
maintainers = [
    { name = "pyOpenSci", email = "admin@pyopensci.org" }, # Optional
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",

    # Pick your license  - we suggest MIT, BSD3 or Apache if you are corporate
    "License :: OSI Approved :: MIT License",
    # Specify the Python versions ensuring that you indicate you support Python 3.
    # this is only for pypi and other metadata associated with your package - for your users to see
    "Programming Language :: Python :: 3 :: Only", # BE sure to specify that you use python 3.x
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "pydantic>=2.0",
    "python-dotenv",
    "requests",
    "ruamel-yaml>=0.17.21",
]
# This is metadata that pip reads to understand what Python versions your package supports
requires-python = ">=3.10"
readme = "README.md"
license = { text = "MIT" }

[project.optional-dependencies]
dev = [
    "black",
    "flake8",
    "pre-commit",
    "pytest",
    "pytest-cov"
]

[project.urls]
"Homepage" = "https://github.com/pyopensci/pyosmeta/"
"Bug Reports" = "https://github.com/pyopensci/pyosmeta/issues"
"Source" = "https://github.com/pyopensci/pyosmeta/issues"

# These are entry points that allow you to surface specific functionality
# for a user to run directly from the package.
[project.scripts]
parse-history = "pyosmeta.cli.parse_history:main"
update-contributors = "pyosmeta.cli.update_contributors:main"
update-reviews = "pyosmeta.cli.process_reviews:main"
update-review-teams = "pyosmeta.cli.update_review_teams:main"


### Hatch config ###

[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "src/pyosmeta/_version.py"

[tool.hatch.envs.test]
dependencies = [
  "pytest",
  "pytest-cov",
]

[tool.hatch.envs.test.scripts]
#run-coverage = "pytest --cov-config=pyproject.toml --cov=pkg --cov=tests"
#run = "run-coverage --no-cov"
run-tests = "pytest"


### Tool configuration ###

[tool.black]
line-length = 79
target-version = ['py310']

[tool.isort]
profile = "black"
multi_line_output = 3
py_version = 27

# Precommit ignores this config so i added a .flake8 file
# but why did it ignore it?
[tool.flake8]
extend-ignore = ["E203", "W503"]
